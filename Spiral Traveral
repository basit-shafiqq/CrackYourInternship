class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        
        List<Integer> ans = new ArrayList<>();
        int rows = matrix.length;
        int cols = matrix[0].length;

        int left = 0;
        int right = cols-1;

        int top = 0;
        int bottom = rows-1;

        while(left<=right && top<=bottom){

            ///// printing top layer

            for(int i = left;i<=right;i++){
                
                ans.add(matrix[top][i]);
                
            }
            top++;

            ///// printing right most layer

            for(int i = top;i<=bottom;i++){

                ans.add(matrix[i][right]);
            }
            right--;

            ///// printing bottom most layer

            if(top<=bottom){
                for(int i = right;i>=left;i--){
                      ans.add(matrix[bottom][i]);
                }
                bottom--;
            }
            

            /////printing left most layer

            if(left<=right){
                for(int i = bottom;i>=top;i--){
                        ans.add(matrix[i][left]);
                }
                left++;
            }
        }

        return ans;

        
        
    }
}
