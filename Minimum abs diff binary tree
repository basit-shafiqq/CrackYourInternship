/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int minDiff = Integer.MAX_VALUE;
    TreeNode prevNode = null;
    public int getMinimumDifference(TreeNode root) {

        inorderTraversal(root);
        return minDiff;
         
    }

    //helper
    void inorderTraversal(TreeNode root){

        if(root==null){
            return;
        }

        inorderTraversal(root.left);

        if(prevNode!=null){

            minDiff = Math.min(minDiff,Math.abs(prevNode.val-root.val));
        }

        prevNode = root;
        inorderTraversal(root.right);
    }
}
