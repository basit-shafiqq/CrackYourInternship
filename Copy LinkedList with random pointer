/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        
        HashMap<Node,Node>map = new HashMap<>();

        Node temp = head;
        while(temp!=null){

            Node newNode = new Node(temp.val);
            map.put(temp,newNode);
            temp = temp.next;
        }

        temp = head;
        while(temp!=null){
            
            Node node = map.get(temp);
            
            node.next = (temp.next!=null)?map.get(temp.next):null;
            node.random = (temp.random!=null)?map.get(temp.random):null;

            temp = temp.next;
        }

        return map.get(head);
    }
}
