class Solution {
    public int findDuplicate(int[] nums) {
        
        //This takes extra space
        // Set<Integer>set = new HashSet<>();

        // for(int num:nums){

        //     if(set.contains(num)){

        //         return num;
        //     }
        //     set.add(num);
        // }

        // return -1;

        // without extra space using   
        // Using Floyd's Tortoise and Hare (Cycle Detection) algorithm

        int slow = nums[0];
        int fast = nums[0];

        do{
            slow = nums[slow];
            fast = nums[nums[fast]];
        }while(slow!=fast);

        slow = nums[0];
        while (slow != fast) {
            slow = nums[slow];
            fast = nums[fast];
        }
        
        return slow;
        
    }
}
